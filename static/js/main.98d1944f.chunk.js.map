{"version":3,"sources":["components/NavBar.jsx","components/LoginComponent.jsx","components/WorkoutComponent.jsx","components/MoodsComponent.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","index.js","components/images/Happy.jpg","components/images/Motivated.jpg","components/images/WorkoutPic.webp"],"names":["NavBar","className","AppBar","position","Toolbar","Typography","variant","color","LoginComponent","props","TextField","label","Button","onClick","login","Workout","url","videos","happy","workout","motivated","useStyles","makeStyles","root","minWidth","title","fontSize","pos","marginBottom","dropDown","width","Moods","classes","React","useState","mood","setMood","Card","CardContent","id","gutterBottom","FormControl","formControl","InputLabel","Select","value","onChange","event","target","console","log","MenuItem","map","x","Dashboard","handleChange","e","setState","notifications","handleSwitch","isOnline","state","handleNotifications","src","Happy","alt","Motivated","WorkoutPic","Component","App","toggle","loggedIn","this","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.98d1944f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"nav-div\">\r\n      <AppBar className=\"aa\" position=\"static\">\r\n        <Toolbar className=\"navBar\">\r\n          <Typography className=\"head\" variant=\"title\" color=\"inherit\">\r\n            <h1 className=\"appName\">MoodMaker</h1>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nconst LoginComponent = (props) => {\r\n  return (\r\n    <div className=\"fields\">\r\n      <div>\r\n        <NavBar />\r\n      </div>\r\n      <div className=\"username\">\r\n        <TextField label=\"Username\" />\r\n      </div>\r\n      <div className=\"password\">\r\n        <TextField label=\"Password\" />\r\n      </div>\r\n      <div className=\"login\">\r\n        <Button onClick={props.login}>LOGIN</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginComponent","import React from 'react';\r\nimport ReactPlayer from \"react-player\"\r\n\r\nfunction Workout(props) {\r\n    return (\r\n      <div className = \"player\">\r\n        <ReactPlayer className=\"react-player\"\r\n          url= {props.url}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n   \r\n  export default Workout;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Workout from \"./WorkoutComponent\";\r\n\r\nconst videos = {\r\n  happy: [\r\n    \"https://www.youtube.com/watch?v=FPBmVnsZaN8&ab_channel=Psych2Go\",\r\n    \"https://www.youtube.com/watch?v=DODLEX4zzLQ&ab_channel=TigerProductions\",\r\n    \"https://www.youtube.com/watch?v=Ai_8pJf5TSs&ab_channel=America%27sFunniestHomeVideos\"\r\n  ],\r\n  workout: [\r\n    \"https://www.youtube.com/watch?v=EykWcFEtFqo&ab_channel=HowardFreemanMotivation\",\r\n    \"https://www.youtube.com/watch?v=Zy5c2k3W458\",\r\n    \"https://www.youtube.com/watch?v=50XxKdBQHqY&ab_channel=JREFilms\"\r\n  ],\r\n  motivated: [\r\n    \"https://www.youtube.com/watch?v=PAFcHMidJj8&ab_channel=BurakDe%C4%9FerBi%C3%A7er\",\r\n    \"https://www.youtube.com/watch?v=TBuIGBCF9jc&ab_channel=MotivationHub\"\r\n  ],\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  dropDown: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nexport default function Moods() {\r\n  const classes = useStyles();\r\n\r\n  const [mood, setMood] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setMood(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card\">\r\n      <CardContent className=\"card-color\">\r\n        <Typography id=\"text-color\" gutterBottom>\r\n          <h1>DESIRED MOOD</h1>\r\n        </Typography>\r\n\r\n        <FormControl variant=\"filled\" className={classes.formControl}>\r\n          <InputLabel id=\"text-color\">Moods</InputLabel>\r\n          <Select\r\n            id=\"text-color\"\r\n            className={classes.dropDown}\r\n            value={mood}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem className=\"happy\" value={\"happy\"}>Happy</MenuItem>\r\n            <MenuItem value={\"workout\"}>Workout</MenuItem>\r\n            <MenuItem value={\"motivated\"}>Motivated</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        {mood && videos[mood].map((x) => <Workout url={x} />)}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Moods from \"./MoodsComponent\";\r\nimport Happy from \"./images/Happy.jpg\"\r\nimport Motivated from \"./images/Motivated.jpg\"\r\nimport WorkoutPic from \"./images/WorkoutPic.webp\"\r\nimport NavBar from \"./NavBar\"\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notifications: [],\r\n      isOnline: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ notifications: [] });\r\n  };\r\n\r\n  handleSwitch = () => {\r\n    this.setState({ isOnline: !this.state.isOnline });\r\n    this.handleNotifications();\r\n  };\r\n\r\n  handleNotifications = () => {\r\n    let notification = \"You're offline\";\r\n    this.setState({\r\n      notifications: [...this.state.notifications, notification],\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <NavBar />\r\n        {/* <video className=\"video\" autoPlay loop muted>\r\n          <source src={Running} type =\"video/mp4\"/>\r\n        </video> */}\r\n        <div className=\"audioCard\">\r\n          <Moods />\r\n        </div>\r\n        <ul className=\"dash-img\">\r\n          <li>\r\n            <img src={Happy} alt=\"\"/>\r\n          </li>\r\n          <li>\r\n            <img src={Motivated} alt=\"\"/>\r\n          </li>\r\n          <li>\r\n            <img src={WorkoutPic} alt=\"\"/>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport LoginComponent from \"./components/LoginComponent\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ loggedIn: !this.state.loggedIn });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loggedIn) {\r\n      return <Dashboard />;\r\n    } else {\r\n      return <LoginComponent login={this.toggle} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Happy.c39c2da0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Motivated.bf5bf17f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/WorkoutPic.966c83fd.webp\";"],"sourceRoot":""}